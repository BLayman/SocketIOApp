{"version":3,"sources":["webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src async","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/PostsService/PostsService.service.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/ProbsService/ProbsService.service.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/UserService/UserService.service.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.component.css","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.component.html","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.component.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.module.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.service.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/popup/popup.component.css","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/popup/popup.component.html","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/popup/popup.component.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/postsDisplay/postsDisplay.component.css","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/postsDisplay/postsDisplay.component.html","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/postsDisplay/postsDisplay.component.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/probSelect/probSelect.component.css","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/probSelect/probSelect.component.html","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/probSelect/probSelect.component.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/submitPost/submitPost.component.css","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/submitPost/submitPost.component.html","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/submitPost/submitPost.component.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/environments/environment.ts","webpack:///C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import {Injectable} from \"@angular/core\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {Post} from './post';\r\nimport 'rxjs/Rx';\r\nimport {AppService} from \"../app.service\";\r\n\r\n\r\n@Injectable()\r\nexport class PostService{\r\n  private url = 'http://localhost:8080';\r\n  private socket : SocketIOClient.Socket;\r\n\r\n  constructor(private appService: AppService){\r\n    this.socket = appService.socket;\r\n  }\r\n\r\n  // listen for response rooms events\r\n  listenForPosts(){\r\n    let listener = Observable.fromEvent(this.socket, 'response posts');\r\n    return listener;\r\n  }\r\n\r\n  listenForPublished(){\r\n    let listener = Observable.fromEvent(this.socket, \"response published\");\r\n    return listener;\r\n  }\r\n\r\n  publishPosts(posts){\r\n    console.log(posts);\r\n    this.socket.emit('publish posts', posts);\r\n  }\r\n\r\n  addPost(post){\r\n    this.socket.emit('new post', post);\r\n  }\r\n\r\n  requestPosts(room){\r\n    this.socket.emit('join room', room); // join requested room\r\n  }\r\n\r\n  deletePosts(roomPK){\r\n    this.socket.emit('delete posts', roomPK);\r\n  }\r\n\r\n  clearPublished(currRoom){\r\n    this.socket.emit('clear published', currRoom);\r\n  }\r\n\r\n  listenForDeletedPosts(){\r\n    let listener = Observable.fromEvent(this.socket, 'posts deleted');\r\n    return listener;\r\n  }\r\n\r\n  listenForDeletedPublished(){\r\n    let listener = Observable.fromEvent(this.socket, 'published deleted');\r\n    return listener;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/PostsService/PostsService.service.ts","import {PROBS} from \"./mockProbs\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport {AppService} from \"../app.service\";\r\n\r\n@Injectable()\r\nexport class ProbService{\r\n  private socket : SocketIOClient.Socket;\r\n\r\n  constructor(private appService: AppService){\r\n      this.socket = appService.socket;;\r\n  }\r\n\r\n  /* problem addition */\r\n\r\n  listenForProbs(){\r\n    let listener = Observable.fromEvent(this.socket, 'response rooms');\r\n    return listener;\r\n  }\r\n\r\n  addNewProb(prob){\r\n    this.socket.emit(\"new room\", prob);\r\n  }\r\n\r\n  /* problem deletion */\r\n\r\n  listenForDeleted(){\r\n    let listener = Observable.fromEvent(this.socket, 'room deleted');\r\n    return listener;\r\n  }\r\n\r\n  deleteProb(probPK){\r\n    this.socket.emit(\"delete room\", probPK);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/ProbsService/ProbsService.service.ts","import {Injectable} from \"@angular/core\";\r\nimport * as io from \"socket.io-client\";\r\nimport 'rxjs/Rx';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {AppService} from \"../app.service\";\r\n\r\n@Injectable()\r\nexport class UserService{\r\n  private socket : SocketIOClient.Socket;\r\n\r\n  constructor(private appService: AppService){\r\n      this.socket = appService.socket;\r\n  }\r\n\r\n  addUser(user){\r\n    return new Promise((resolve, reject) => {\r\n      this.socket.emit(\"add user\", user);\r\n      let eventListener = Observable.fromEvent(this.socket, \"validation\");\r\n      eventListener.subscribe(\r\n        (resObj) => {\r\n            resolve(resObj);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        },\r\n        () => {console.log(\"done\");\r\n      });\r\n    });\r\n  }\r\n\r\n  listenForAdmin(){\r\n    let listener = Observable.fromEvent(this.socket, \"admin\");\r\n    return listener;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/UserService/UserService.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1{\\r\\n  text-align: center;\\r\\n  font-family: Courier, monospace;\\r\\n  border-radius: 10%;\\r\\n  font-size: 38px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<!--The whole content below can be removed with the new code.-->\\r\\n<h1 id=\\\"mainTitle\\\">{{title}}</h1>\\r\\n<prob-select [postsDisplay]=\\\"PD\\\" [admin]=\\\"admin\\\" #PS></prob-select>\\r\\n<submit-post [admin]=\\\"admin\\\" [postsDisplay] = \\\"PD\\\" [nickname]=\\\"nickname\\\" [probSelect]=\\\"PS\\\" [userPK]=\\\"userPK\\\"></submit-post>\\r\\n<posts-display [admin]=\\\"admin\\\" #PD [probSelect] = \\\"PS\\\"></posts-display>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, Input, ViewChild } from '@angular/core';\r\nimport {UserService} from './UserService/UserService.service';\r\nimport {Dialog} from './popup/popup.component';\r\nimport {MdDialog, MdDialogRef} from '@angular/material';\r\nimport {postsDisplayComponent} from \"./postsDisplay/postsDisplay.component\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  @ViewChild(postsDisplayComponent) postsDisp: postsDisplayComponent;\r\n  dialogRef : MdDialogRef<Dialog>;\r\n  title = 'Share Code';\r\n  admin : boolean = false;\r\n  userID : string = \"\";\r\n  userPK : number;\r\n  nickname: string = \"\";\r\n  validationError : boolean = false;\r\n\r\n  constructor(private userService : UserService, public dialog: MdDialog ){\r\n    this.openDialog();\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.listenForAdmin();\r\n  }\r\n\r\n  openDialog() {\r\n    this.dialogRef = this.dialog.open(Dialog,{disableClose: true,});\r\n    if (this.validationError) {\r\n      this.dialogRef.componentInstance.errorMsg = \"Invalid Nickname or Student ID\";\r\n    }\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n      this.dialogRef = null;\r\n      console.log(result);\r\n      if(result.stID == \"\" || result.ncknm == \"\"){\r\n        this.validationError = true;\r\n        this.openDialog();\r\n        return;\r\n      }\r\n      this.userService.addUser(result.stID)\r\n      .then((resObj: any) => {\r\n        if (resObj.valid) {\r\n          console.log(\"passed verification\");\r\n          this.userPK = resObj.pk;\r\n          this.userID = result.stID;\r\n          this.nickname = result.ncknm;\r\n        }\r\n        else{\r\n          console.log(\"failed verification\");\r\n          this.validationError = true;\r\n          this.openDialog();\n          return;\r\n        }\r\n      })\r\n      .catch((error) => {console.log(error);})\r\n    });\r\n  }\r\n\r\n  listenForAdmin(){\r\n    this.userService.listenForAdmin()\r\n    .subscribe(\r\n      (isAdmin) => {\r\n        if (isAdmin) {\r\n          console.log(\"administrator\");\r\n          this.admin = true;\r\n          this.postsDisp.listenForPosts();\r\n        }\r\n        else{\r\n          console.log(\"listening for published\");\r\n          this.admin = false;\r\n          this.postsDisp.listenForPublished();\r\n        }\r\n      },\r\n      (error) => {console.log(error);},\r\n      () => {console.log(\"done\");}\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MaterialModule} from '@angular/material';\r\nimport { MdDialogModule } from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport 'hammerjs';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProbSelectComponent} from './probSelect/probSelect.component'\r\nimport { SubmitPostComponent } from \"./submitPost/submitPost.component\";\r\nimport {postsDisplayComponent} from \"./postsDisplay/postsDisplay.component\";\r\nimport {Dialog} from './popup/popup.component';\r\n\r\nimport {PostService} from \"./PostsService/PostsService.service\";\r\nimport {ProbService} from './ProbsService/ProbsService.service';\r\nimport {UserService} from './UserService/UserService.service';\r\nimport {AppService} from \"./app.service\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProbSelectComponent,\r\n    SubmitPostComponent,\r\n    postsDisplayComponent,\r\n    Dialog,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MdDialogModule,\r\n  ],\r\n  entryComponents:[Dialog],\r\n  providers: [AppService,PostService, ProbService, UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.module.ts","import {Injectable} from \"@angular/core\";\r\nimport * as io from \"socket.io-client\";\r\n\r\n@Injectable()\r\nexport class AppService{\r\n  public socket : SocketIOClient.Socket;\r\n\r\n  constructor(){\r\n      this.socket = io();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/app.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input{\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n#err{\\r\\n  color:red;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/popup/popup.component.css\n// module id = ../../../../../src/app/popup/popup.component.css\n// module chunks = 1","module.exports = \"<h3>Please Enter Info: </h3>\\r\\n<div>\\r\\n  <label>Nickname</label>\\r\\n  <br>\\r\\n  <md-input-container>\\r\\n  <input mdInput type=\\\"text\\\" #ncknm >\\r\\n</md-input-container>\\r\\n  <br>\\r\\n\\r\\n  <label>Student Id</label>\\r\\n  <br>\\r\\n  <md-input-container>\\r\\n  <input mdInput type=\\\"password\\\" #stID >\\r\\n</md-input-container>\\r\\n</div>\\r\\n<div md-dialog-actions>\\r\\n  <button md-button class=\\\"popup-btn\\\" (click)=\\\"dialogRef.close({ncknm: ncknm.value, stID: stID.value})\\\">Submit</button>\\r\\n</div>\\r\\n<p id=\\\"err\\\">{{errorMsg}}</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/popup/popup.component.html\n// module id = ../../../../../src/app/popup/popup.component.html\n// module chunks = 1","import {Component} from '@angular/core';\r\nimport {MdDialog, MdDialogRef} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'my-dialog',\r\n  templateUrl: './popup.component.html',\r\n  styleUrls: ['./popup.component.css']\r\n})\r\n\r\nexport class Dialog {\r\n  userInput : {ncknm:string,stID:string};\r\n  errorMsg: string = \"\";\r\n\r\n  constructor(public dialogRef: MdDialogRef<Dialog>){}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/popup/popup.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selectedPost{\\r\\n  border-width: 3px;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.highlight{\\r\\n  background-color: blue !important;\\r\\n}\\r\\n\\r\\n.codeBox{\\r\\n  background-color: rgb(50,50,50);\\r\\n  color: rgb(230,230,230);\\r\\n  width: 65%%;\\r\\n  margin-left: 30%;\\r\\n  margin-right: 5%;\\r\\n  font-size: 1.2vw;\\r\\n  padding: 1%;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n.post{\\r\\n  background-color:rgb(50,50,50);\\r\\n  color:rgb(230,230,230);\\r\\n  font-size: .9vw;\\r\\n  white-space: pre-wrap;\\r\\n  margin: 0px;\\r\\n}\\r\\n#post:hover .post{\\r\\n  background-color:darkBlue;\\r\\n}\\r\\n#post:active .post{\\r\\n  background-color:blue;\\r\\n}\\r\\n\\r\\n#post:hover{\\r\\n  background-color:gray;\\r\\n}\\r\\n#post:active{\\r\\n  background-color:lightgray;\\r\\n  color:black;\\r\\n}\\r\\n\\r\\n#posts{\\r\\n  width:25%;\\r\\n  float:left;\\r\\n}\\r\\n\\r\\n#post{\\r\\n  background-color: rgb(90, 90, 90);\\r\\n  color:white;\\r\\n  margin-top:5%;\\r\\n  border-style:groove;\\r\\n}\\r\\np{\\r\\n  margin:0px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/postsDisplay/postsDisplay.component.css\n// module id = ../../../../../src/app/postsDisplay/postsDisplay.component.css\n// module chunks = 1","module.exports = \"<div>\\r\\n  <button *ngIf=\\\"admin == true\\\" class=\\\"delete\\\" (click)=\\\"clearSubmissions()\\\">Clear Submissions</button>\\r\\n  <button *ngIf=\\\"admin == true\\\" class=\\\"create\\\" (click)=\\\"publishSelection()\\\">Publish Selected</button>\\r\\n  <button *ngIf=\\\"admin == true\\\" class=\\\"delete\\\" (click)=\\\"clearPublished()\\\">Clear Published</button>\\r\\n</div>\\r\\n<br>\\r\\n<br>\\r\\n<!-- posts list div -->\\r\\n<h3>{{currRoom}}</h3>\\r\\n<div id=\\\"posts\\\">\\r\\n  <div *ngFor= \\\"let post of posts\\\" id=\\\"post\\\" [class.selectedPost]=\\\"post.selected\\\" [class.highlight]= \\\"post.viewing\\\" (click)=\\\"viewPost(post)\\\">\\r\\n    <p>{{post.nickname}}</p>\\r\\n    <pre class = \\\"post\\\" >{{post.body}}</pre>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- code main display -->\\r\\n<pre class=\\\"codeBox\\\">\\r\\n  <code id=\\\"displayCode\\\">{{selectedPost.body}}</code>\\r\\n</pre>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/postsDisplay/postsDisplay.component.html\n// module id = ../../../../../src/app/postsDisplay/postsDisplay.component.html\n// module chunks = 1","import { Component } from \"@angular/core\";\r\nimport {Post} from '../postsService/post'; // post model\r\nimport {PostService} from \"../PostsService/PostsService.service\";\r\nimport {Input} from '@angular/core';\r\nimport {ProbSelectComponent} from '../probSelect/probSelect.component'\r\n\r\n@Component({\r\n  selector: 'posts-display',\r\n  templateUrl: './postsDisplay.component.html',\r\n  styleUrls: ['./postsDisplay.component.css'],\r\n})\r\n\r\nexport class postsDisplayComponent {\r\n  @Input() admin: boolean;\r\n  @Input() probSelect: ProbSelectComponent;\r\n\r\n  posts: Post[] = []; // array of posts bound to our html by structural directive\r\n  selectedPost: Post = {\r\n    body: \"Code displayed here.\",\r\n    selected: true,\r\n    nickname: \"\",\r\n    viewing: true,\r\n    roomPK: -1,\r\n    userPK: -1,\r\n    id: -1\r\n  }\r\n  adminSelected: Post[] = [];\r\n  currRoom: string = \"\";\r\n  storedByRoom: {} = {}; // client storage of users own posts\r\n\r\n  constructor(private postService: PostService) { // create a PostService variable\r\n    this.listenForDeletedPosts();\r\n    this.listenForDeletedPublished();\r\n  }\r\n\r\n  postToSelf(post){\r\n    // if the room exists in our object\r\n    if(this.storedByRoom[this.currRoom]){\r\n      // push new post content\r\n      this.storedByRoom[this.currRoom].push(post);\r\n    }\r\n    // if the room doesn't yet exist\r\n    else{\r\n      // create an array at that room key, and push post content\r\n      this.storedByRoom[this.currRoom] = [];\r\n      this.storedByRoom[this.currRoom].push(post);\r\n    }\r\n    // display new post on screen\r\n    this.addPosts([post]);\r\n    console.log(this.storedByRoom);\r\n  }\r\n  // called by probSelect when room is changed\r\n  changeRoom(room) {\r\n    // clear out old posts from display\r\n    this.posts = [];\r\n    // clear out old selection\r\n    this.adminSelected = [];\r\n    // change current room to new room name\r\n    this.currRoom = room;\r\n    console.log(\"room changed to: \" + room);\r\n    // add posts from storedByRoom if there are any\r\n    if (this.storedByRoom[room]) {\r\n      console.log(this.storedByRoom[room]);\r\n      this.addPosts(this.storedByRoom[room]);\r\n    }\r\n    else{\r\n      console.log(\"no posts yet\");\r\n    }\r\n\r\n  }\r\n\r\n  listenForPosts() {\r\n    let postObserver = this.postService.listenForPosts();\r\n    // subscribe to observable that listens for posts\r\n    postObserver.subscribe(\r\n      // when posts are retrieved, add the to posts property\r\n      retrievedPosts => {\r\n        this.addPosts(retrievedPosts);\r\n      }, (error) => {\r\n        console.error(error);\r\n      }, () => {\r\n        console.log(\"done\");\r\n      }\r\n    );\r\n  }\r\n\r\n  listenForPublished() {\r\n    let observer = this.postService.listenForPublished();\r\n    observer.subscribe(\r\n      retrievedPublished => {\r\n        console.log(\"received: \");\r\n        console.log(retrievedPublished);\r\n        this.addPosts(retrievedPublished);\r\n      }, (error) => {\r\n        console.error(error);\r\n      }, () => {\r\n        console.log(\"done\");\r\n      }\r\n    )\r\n  }\r\n\r\n  listenForDeletedPublished(){\r\n    let observer = this.postService.listenForDeletedPublished();\r\n    // subscribe to observable that listens for posts\r\n    observer.subscribe(\r\n      // when posts are retrieved, add the to posts property\r\n      () => {\r\n        console.log(\"deleted published\");\r\n        if(!this.admin){\r\n          this.posts = [];\r\n          // retain post that were submitted by this user\r\n          if (this.storedByRoom[this.currRoom]){\r\n            this.addPosts(this.storedByRoom[this.currRoom]);\r\n          }\r\n        }\r\n      }, (error) => {\r\n        console.log(\"error\");\r\n        console.error(error);\r\n      }, () => {\r\n        console.log(\"done\");\r\n      }\r\n    );\r\n  }\r\n\r\n  listenForDeletedPosts() {\r\n    let deletedObserver = this.postService.listenForDeletedPosts();\r\n    // subscribe to observable that listens for posts\r\n    deletedObserver.subscribe(\r\n      // when posts are retrieved, add the to posts property\r\n      () => {\r\n        if (this.admin) {\r\n          console.log(\"deleted posts\");\r\n          this.posts = [];\r\n        }\r\n      }, (error) => {\r\n        console.log(\"error\");\r\n        console.error(error);\r\n      }, () => {\r\n        console.log(\"done\");\r\n      }\r\n    );\r\n  }\r\n  // for converting array of strings to posts\r\n  addPosts(newPosts) {\r\n    newPosts.forEach(post => {\r\n      post.viewing = false;\r\n      post.selected = false;\r\n      this.posts.push(post);\r\n    });\r\n  }\r\n\r\n  publishSelection() {\r\n    this.postService.publishPosts(this.adminSelected);\r\n  }\r\n\r\n  clearSubmissions() {\r\n    if (this.currRoom != \"\") {\r\n      this.adminSelected = []; // empty adminSelected array so that deleted posts are not published\r\n      this.postService.deletePosts(this.probSelect.getCurrKey());\r\n    }\r\n  }\r\n\r\n  clearPublished(){\r\n    this.postService.clearPublished(this.probSelect.getCurrKey());\r\n  }\r\n  // display post in large text area\r\n  viewPost(post) {\r\n    this.selectedPost.viewing = false;\r\n    this.selectedPost = post;\r\n    this.selectedPost.viewing = true;\r\n    // if administrator clicks on a post, select or deselect\r\n    if (this.admin) {\r\n      // if selected, deselect and remove from adminSelected\r\n      if (post.selected) {\r\n        post.selected = false;\r\n        let index = this.adminSelected.indexOf(post);\r\n        this.adminSelected.splice(index, 1);\r\n      }\r\n      // if not yet selected, then select it and add it to adminSelected\r\n      else {\r\n        this.adminSelected.push(post);\r\n        post.selected = true;\r\n      }\r\n      console.log(this.selectedPost);\r\n\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/postsDisplay/postsDisplay.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#selectProblem, #probs, #createProblem{\\r\\n  float: left;\\r\\n  margin-right: 1%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/probSelect/probSelect.component.css\n// module id = ../../../../../src/app/probSelect/probSelect.component.css\n// module chunks = 1","module.exports = \"<!--The whole content below can be removed with the new code.-->\\r\\n<h2>Select Problem: </h2>\\r\\n\\r\\n  <!-- drop down menu -->\\r\\n  <select name=\\\"Problems\\\" id=\\\"probs\\\" [(ngModel)]=\\\"currProb\\\" (change)=\\\"selectProblem()\\\">\\r\\n    <option *ngFor= \\\"let prob of probs\\\" [value]=\\\"prob\\\"> {{prob}} </option>\\r\\n  </select>\\r\\n\\r\\n  <!-- drop down buttons -->\\r\\n  <button id=\\\"deleteProblem\\\" class=\\\"delete\\\" *ngIf=\\\"admin == true\\\" (click)=\\\"deleteProblem()\\\">Delete</button>\\r\\n  <button id=\\\"createProblem\\\" class=\\\"create\\\" *ngIf=\\\"admin == true\\\" (click)=\\\"createProblem()\\\">Create New Category</button>\\r\\n  <br>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/probSelect/probSelect.component.html\n// module id = ../../../../../src/app/probSelect/probSelect.component.html\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport {ProbService} from '../ProbsService/ProbsService.service';\r\nimport {PostService} from '../PostsService/PostsService.service';\r\nimport {postsDisplayComponent} from '../postsDisplay/postsDisplay.component';\r\nimport {Prob} from '../ProbsService/prob';\r\n\r\n@Component({\r\n  selector: 'prob-select',\r\n  templateUrl: './probSelect.component.html',\r\n  styleUrls: ['./probSelect.component.css']\r\n})\r\n\r\nexport class ProbSelectComponent {\r\n  @Input() admin: boolean;\r\n  @Input() postsDisplay: postsDisplayComponent;\r\n  default :string = \" -- select an option -- \";\r\n  keyVal : {} = {};\r\n  probs : string[] = [this.default];\r\n  currProb : string;\r\n  currKey: number;\r\n  justCreated : boolean = false;\r\n\r\n  constructor(private probService: ProbService, private postService: PostService){}\r\n\r\n  ngOnInit(){\r\n    this.currProb = this.default;\r\n    this.keyVal[this.currProb] = -1;\r\n    console.log(\"default current problem: \" + this.currProb);\r\n    this.listenForProbs();\r\n    this.listenForDeleted();\r\n  }\r\n\r\n  selectProblem(){\r\n    // get key associated with problem name\r\n    this.currKey = this.keyVal[this.currProb];\r\n    console.log(\"problem: \" + this.currProb + \" id: \" + this.currKey + \" selected\");\r\n    console.log(this.keyVal);\r\n    // change posts displayed to posts in this room\r\n    this.postsDisplay.changeRoom(this.currProb);\r\n    // request the posts for this room\r\n    this.postService.requestPosts(this.currKey);\r\n  }\r\n\r\n  getCurrKey(){\r\n    this.currKey = this.keyVal[this.currProb];\r\n    return this.currKey;\r\n  }\r\n\r\n\r\n  createProblem(prob){\r\n    console.log(\"create new problem\");\r\n    let name = prompt(\"Enter name for new room:\");\r\n    if(name){\r\n      this.probService.addNewProb(name);\r\n      this.justCreated = true;\r\n    }\r\n  }\r\n\r\n  listenForProbs(){\r\n    let probObserver = this.probService.listenForProbs();\r\n    probObserver.subscribe(\r\n      (retrievedProbs : Prob[]) => {\r\n        retrievedProbs.forEach(prob => {\r\n            // when a new problem has been created, associate problem name with primary key\r\n            this.keyVal[prob.name] = prob.pk;\r\n            // add new problem to dropdown\r\n            this.probs.push(prob.name);\r\n            console.log(this.probs);\r\n        });\r\n        if (this.justCreated) {\r\n          retrievedProbs.forEach(prob => {\r\n            this.currProb = prob.name;\r\n            this.selectProblem();\r\n            this.justCreated = false;\r\n          });\r\n        }\r\n      },(error) => {\r\n        console.error(error);\r\n      }, () => {\r\n        console.log(\"done\");\r\n      }\r\n  );\r\n  }\r\n\r\n  deleteProblem(){\r\n    if (this.currProb != this.default){\r\n      this.currKey = this.keyVal[this.currProb];\r\n      console.log(\"problem \"+ this.currProb + \" with key: \" + this.currKey + \" deleted\");\r\n      this.probService.deleteProb(this.currKey);\r\n    }\r\n  }\r\n\r\n  listenForDeleted(){\r\n    let deletedObserver = this.probService.listenForDeleted();\r\n    deletedObserver.subscribe(\r\n      (deleted : Prob) => {\r\n        // delete property of keyVal object corresponding to that pk\r\n        delete this.keyVal[deleted.name];\r\n        // remove problem from dropdown\r\n        let index = this.probs.indexOf(deleted.name);\r\n        this.probs.splice(index,1);\r\n        // if the user is on that problem, move them back to the default selection\r\n        if (this.currProb == deleted.name) {\r\n          this.currProb = this.default;\r\n          this.selectProblem();\r\n        }\r\n      },(error) => {\r\n        console.error(error);\r\n      }, () => {\r\n        console.log(\"done\");\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/probSelect/probSelect.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#submitCode{\\r\\n  float: left;\\r\\n  margin-right: 1%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/submitPost/submitPost.component.css\n// module id = ../../../../../src/app/submitPost/submitPost.component.css\n// module chunks = 1","module.exports = \"<!-- text box -->\\r\\n<h2>Paste Code here:</h2>\\r\\n<textarea name=\\\"code\\\" rows=\\\"10\\\" cols=\\\"90\\\" id=\\\"txtArea\\\" [(ngModel)] = textBody></textarea>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<!-- post buttons -->\\r\\n<button id=\\\"submitCode\\\" class=\\\"create\\\" (click)=\\\"submitCode()\\\">Submit code</button>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/submitPost/submitPost.component.html\n// module id = ../../../../../src/app/submitPost/submitPost.component.html\n// module chunks = 1","import { Component, Input } from \"@angular/core\";\r\nimport {PostService} from \"../PostsService/PostsService.service\";\r\nimport {postsDisplayComponent} from '../postsDisplay/postsDisplay.component';\r\nimport {Post} from '../PostsService/post';\r\nimport {ProbSelectComponent} from '../probSelect/probSelect.component';\r\n\r\n@Component({\r\n  selector: 'submit-post',\r\n  templateUrl: './submitPost.component.html',\r\n  styleUrls: ['./submitPost.component.css']\r\n})\r\nexport class SubmitPostComponent {\r\n  @Input() admin: boolean;\r\n  @Input() nickname: string;\r\n  @Input() postsDisplay: postsDisplayComponent;\r\n  @Input() probSelect: ProbSelectComponent;\r\n  @Input() userPK : number;\r\n  newPost : Post;\r\n  textBody : string = \"\";\r\n\r\n  constructor(private postService: PostService){}\r\n\r\n  // when user clicks \"Sumbit code\"\r\n  submitCode(){\r\n    // if the user is in a valid room\r\n    if (this.probSelect.currProb != this.probSelect.default){\r\n      console.log(\"submitting: \" + this.textBody);\r\n      // create new post with text area content and user's nickname\r\n      this.newPost = {\r\n        selected:false,\r\n        viewing:false,\r\n        body:this.textBody,\r\n        nickname:this.nickname,\r\n        userPK:this.userPK,\r\n        roomPK:this.probSelect.currKey,\r\n        id:-1\r\n      };\r\n      // send new post to the server\r\n      this.postService.addPost(this.newPost);\r\n      // if user is not an admin, also post the content to their client stored posts object\r\n      if (!this.admin) {\r\n        this.postsDisplay.postToSelf(this.newPost);\r\n      }\r\n    }\r\n    // alert if no room has been selected\r\n    else{\r\n      alert(\"Please select a problem from the dropdown menu.\")\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/app/submitPost/submitPost.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Brett/Documents/GitHub/Work/Codeshare/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 0\n// module chunks = 1"],"sourceRoot":""}